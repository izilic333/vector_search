"""
Django settings for vidoso project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import warnings
from datetime import timedelta
from pathlib import Path

import environ

root = environ.Path(__file__) - 2  # get root of the project

# default variables
env = environ.Env()
environ.Env.read_env(root("vidoso", ".env.local"))
environ.Env.read_env(root("vidoso", ".env"))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = str(root)
SECRET_KEY = env.str('SECRET_KEY')
DEBUG = env.bool('DEBUG', default=False)

ALLOWED_HOSTS = env.list("ALLOWED_HOSTS", default=[])
DJANGO_LOG_LEVEL = env.str('DJANGO_LOG_LEVEL', 'INFO').upper()

# Application definition

OWN_APPS = [
    'administration.apps.AdministrationConfig',
]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'django.contrib.postgres',
    'rest_framework',
    'django_filters',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'crispy_forms',
    'crispy_bootstrap5',
    'django_celery_results',
    'channels',
    *OWN_APPS,
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'vidoso.urls'
AUTH_USER_MODEL = 'administration.User'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            Path(BASE_DIR) / 'templates',
            Path(BASE_DIR) / 'administration' / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'vidoso.wsgi.application'
ASGI_APPLICATION = "vidoso.asgi.application"


DATABASES = {'default': env.db()}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
LOGIN_URL = '/admin/login/'
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

DEFAULT_RENDERER_CLASSES = ['rest_framework.renderers.JSONRenderer']

if DEBUG:
    DEFAULT_RENDERER_CLASSES.append('rest_framework.renderers.BrowsableAPIRenderer')

STATIC_URL = '/static/'

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
DEFAULT_RENDERER_CLASSES = ['rest_framework.renderers.JSONRenderer']

if DEBUG:
    DEFAULT_RENDERER_CLASSES.append('rest_framework.renderers.BrowsableAPIRenderer')

REST_FRAMEWORK = {
    "DEFAULT_RENDERER_CLASSES": DEFAULT_RENDERER_CLASSES,
    # Use Django's standard `django.contrib.auth` permissions,
    # or restrict to authenticated users as following:
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.TokenAuthentication",
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 100,
    "DEFAULT_VERSIONING_CLASS": "rest_framework.versioning.URLPathVersioning",
}

# simple jwt
SIMPLE_JWT_ACCESS_TOKEN_LIFETIME = env.int('SIMPLE_JWT_ACCESS_TOKEN_LIFETIME', 50)
SIMPLE_JWT_REFRESH_TOKEN_LIFETIME = env.int('SIMPLE_JWT_REFRESH_TOKEN_LIFETIME', 1)
warnings.filterwarnings("ignore", category=DeprecationWarning)

warnings.filterwarnings(
    "ignore",
    message="The default scheme will be changed from 'http' to 'https' in Django 6.0.",
    category=Warning,  # Broad catch-all
    module='django.db.models.fields',
)


SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=SIMPLE_JWT_ACCESS_TOKEN_LIFETIME),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=SIMPLE_JWT_REFRESH_TOKEN_LIFETIME),
    'ROTATE_REFRESH_TOKENS': True,
}


LOCALE_PATHS = [root('locale')]

# Celery settings

CELERY_BROKER_URL = env.str('BROKER_URL')
CELERY_WORKER_HIJACK_ROOT_LOGGER = False
CELERY_QUEUE_HA_POLICY = 'all'
CELERY_RESULT_BACKEND = 'django-db'
CELERY_RESULT_PERSISTENT = True
CELERY_RESULT_EXPIRES = timedelta(days=7)
CELERY_TIMEZONE = 'UTC'
CELERY_TASK_TRACK_STARTED = True
CELERY_EVENT_QUEUE_TTL = 60
CELERY_TASK_ALWAYS_EAGER = env.bool('CELERY_TASK_ALWAYS_EAGER', default=False)
CELERY_TASK_EAGER_PROPAGATES = env.bool('CELERY_TASK_EAGER_PROPAGATES', default=False)
CELERY_RESULT_EXTENDED = True
CELERY_BROKER_CONNECTION_RETRY = True
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True

# Milvus settings
MILVUS_HOST = env.str('MILVUS_HOST')
MILVUS_PORT = env.int('MILVUS_PORT')
MILVUS_COLLECTION_NAME = env.str('MILVUS_COLLECTION_NAME')

# Channels settings
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [(env.str('REDIS_HOST', 'redis'), env.int('REDIS_PORT', 6379))],
        },
    },
}
